<div>
  <!--一つ前のページに戻る(投稿一覧に戻るのではなく、travels#indexからtravels#showへアクセスしたらtravels#indexへ、users#showからtravels#showへアクセスしたらusers#showへ戻る)-->
  <%= link_to "← Go Back", :back %>
  
  <span>※表示されている投稿データは全て架空のダミーです。</span>
  
  <!--投稿タイトル-->
  <h1><%= @travel.title %></h1>
  
  <!--投稿の削除-->
  <% if @travel.user_id == current_user.id %> <!--ログインユーザーは自分の投稿以外は削除できないようにする-->
    <%= link_to travel_path, method: :delete, "data-confirm" => "投稿を削除します。よろしいですか？" do %>
      投稿を削除
    <% end %>
  <% end %>
</div>


<!--写真-->
<div>
  <%= image_tag @travel.get_image(700, 700) %>
</div>

<!--投稿ユーザー(MyPageへのリンク付き)-->
<div>
  <%= link_to user_path(@travel.user.id) do %>
    <%= @travel.user.nickname %>
  <% end %>
</div>

<!--投稿内容-->
<div>
  <%= @travel.body %>
</div>

<!--地図情報-->
<div class="show">
  <div class="show_address">
    <%= @travel.address %>
  </div>
  <div class="show_maps" id="show_map"></div>  <!--マップ表示用。id="map"でもOK-->
</div>

<!--いいね関係-->
<% if @travel.favorited_by?(current_user) %>
  <%= link_to travel_favorites_path(@travel), method: :delete do %>
    ♥ <%= @travel.favorites.count %>いいね！
  <% end %>
<% else %>
  <%= link_to travel_favorites_path(@travel), method: :post do %>
    ♥ <%= @travel.favorites.count %>いいね！
  <% end %>
<% end %>

<!--コメント関係-->
<div>
  <!--コメント件数とコメント内容の表示-->
  <p>コメント件数：<%= @comments.count %>件</p>
  <% @comments.each do |comment| %>
    <%= image_tag comment.user.get_profile_image(100, 100) %>
    <%= comment.user.nickname %>
    <%= comment.comment_body %>
    <% if comment.user == current_user %>
      <%= link_to "削除", travel_comment_path(comment.travel, comment), method: :delete, "data-confirm" => "コメントを削除します。よろしいですか？" %>
    <% end %>
  <% end %>
</div>
<div>
  <%= form_with model: [@travel, @comment], method: :post do |f| %>
    <%= f.text_area :comment_body, placeholder: "コメントをここに" %>
    <%= f.submit "コメント送信" %>
  <% end %>
</div>




<!--地図の表示スタイル-->
<style>
  #show_map {
    width: 600px;
    height: 500px;
  }
</style>

<!--地図表示関係-->
<script>
  var marker
  var myLatLng
  var map
  var map_lat
  var map_lng
  
  function initMap(){
    myLatLng = {lat: <%= @travel.latitude %>, lng: <%= @travel.longitude %>}  // gonを利用してnew時に保存した:latitude, :longitudeをmyLatLngで保持
    marker = new google.maps.Marker();
  
     // デベロッパーツールで地図(住所入力欄)をクリックするとhiddenのidのところに自動的に(Model名 + form_withでの指定カラム名(今回は:latitude, :longitude))が入る仕組みになっている。これを使用してgetElementByIdのidを指定する。
    map = new google.maps.Map(document.getElementById('show_map'), {  // マップ表示の<div class="show_maps" id="show_map"></div>を取得
    center: myLatLng,  // マップのセンターを上で定義したmyLatLngで表示
    zoom: 12
    });
    marker.setPosition(myLatLng);  // マーカーをmyLatLngの位置にセット
    marker.setMap(map);  // マーカーを地図上に表示
  }


</script>