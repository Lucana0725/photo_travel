<div class="row justify-content-center">
  <div class="col-6">
      <div class="text-center mb-5">
        <h1>Let's Create Your New Travel!</h1>
      </div>

    <div class="row">
      <div class="col-12 col-md-4 pl-5 pr-5">
        <% if @travel.errors.any? %>
          <ul>
          <% @travel.errors.full_messages.each do |message| %>
            <li><%= message %></li>
          <% end %>
          </ul>
        <% end %>
        <%= form_with model: @travel, url: travels_path, method: :post do |f| %>
          <div>
            <%= f.label :image, "画像" %></br>
            <%= f.file_field :image %>
          </div>
          <div>
            <%= f.label :title, "投稿タイトル", class: "mt-3" %></br>
            <%= f.text_field :title, class: "form-control" %>
          </div>
          <div>
            <%= f.label :body, "内容", class: "mt-3" %></br>
            <%= f.text_area :body, rows: 6, placeholder: "お出かけの思い出を書きましょう！", class: "form-control" %>
          </div>
          <!--マップの住所入力系-->
          <!--<div class="input-field">-->
          <!--  <input type="text" id="address">-->
          <!--</div>  -->
          <div class="text-right">
            <%= f.submit "投稿する", class: "btn btn-success mt-3" %>
          </div>
      </div>

        <!--マップ-->
        <div class="col-12 col-md-8 pl-5 mt-5 mt-md-0">
          <div>
            <%= f.label :address, "場所" %></br>
            <%= f.text_field :address, placeholder: "地名、施設名などを入力するか、地図をクリックしてください。", class: "form-control" %></br>  <!--住所入力欄-->
            <!--<a class="btn" onclick="codeAddress()">地図検索</a></br>-->
            <button type="button" onclick="codeAddress()" class="btn btn-primary">地図検索</button>
            <!--<a id="del" class="btn marker-delete right" onclick="deleteMarker()">ピンの削除</a>-->
            <button id="del" class="btn btn-danger" type="button" onclick="deleteMarker();">ピンの削除</button>
            <%= f.hidden_field :latitude %>  <!--緯度を取得できるようにする(デベロッパーツールで地図(住所入力欄)をクリックするとhiddenのidのところに自動的に(Model名 + 指定カラム名)が入る仕組みになっている。)-->
            <%= f.hidden_field :longitude %>
          </div>
          <!--マップの表示-->
          <div id="map"></div>

        </div>

      <% end %>
    </div>
  </div>
</div>


<style>
  #map {
    height: 700px;
    /*width: 600px;*/
    width: 100%;
    aspect-ratio: 3 / 2;
  }
</style>

<script>
  var marker
  var myLatLng
  var map
  var map_lat
  var map_lng

  function initMap(){
     myLatLng = {lat: 35.68090045006303, lng: 139.76690798417752}
     marker = new google.maps.Marker();

     // デベロッパーツールで地図(住所入力欄)をクリックするとhiddenのidのところに自動的に(Model名 + form_withでの指定カラム名(今回は:latitude, :longitude))が入る仕組みになっている。これを使用してgetElementByIdのidを指定する。
    map_lat = document.getElementById('travel_latitude')  // < form_with >の< f.hidden_field >で取得したlatitudeを取得、map_latで保持。
    map_lng = document.getElementById('travel_longitude')  // < form_with >の< f.hidden_field >で取得したlatitudeを取得、map_lngで保持。
     map = new google.maps.Map(document.getElementById('map'), {
    center: myLatLng,
    zoom: 12
    });

   google.maps.event.addListener(map, 'click', mylistener);

      //クリックしたときの処理
    function mylistener(event){
      //markerの位置を設定
      //event.latLng.lat()でクリックしたところの緯度を取得
      marker.setPosition(new google.maps.LatLng(event.latLng.lat(), event.latLng.lng()));
      //marker設置
      marker.setMap(map);
      map_lat.value = event.latLng.lat();
      map_lng.value = event.latLng.lng();
    }
  }

  // マーカーの削除
  function deleteMarker(){
    marker.setMap(null);
    map_lat.value = "";
    map_lng.value = "";
  }

  // 住所や地名入力で座標を取得、ピンの設置
  function codeAddress() {
    geocoder = new google.maps.Geocoder()
    let inputAddress = document.getElementById('travel_address').value;  // デベロッパーツールで地図上部の入力欄をみてみたらidにtravel_addressが入っていたのでそれを指定してみた
    geocoder.geocode({
      'address': inputAddress,
      'region': 'jp'
    }, function(results, status) {
      if(status == 'OK') {
        map.setCenter(results[0].geometry.location);
        map_result = results[0].geometry.location;
        map_lat.value = map_result.lat();
        map_lng.value = map_result.lng();
        marker.setPosition(new google.maps.LatLng(map_result.lat(), map_result.lng()));
        marker.setMap(map);
        console.log(map_lat.value, map_lng.value);
      } else {
        alert('該当する結果がありませんでした。');
        initMap();
      }
    });
  }

</script>


